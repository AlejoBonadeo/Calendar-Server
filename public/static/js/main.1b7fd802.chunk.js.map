{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.jsx","helpers/parseEvents.js","actions/events.js","components/ui/NavBar.jsx","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","App.jsx","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","uiOpenModal","uiCloseModal","eventSetActive","eventStartAddNew","eventAddNew","eventClearActive","eventUpdate","eventDelete","eventLoaded","eventLogOut","authCheckingFinish","authStartLogin","authLogin","authStartRegister","authStartRenewToken","authLogout","login","user","type","payload","finishChecking","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","logEmail","logPassword","formLogin","handleLoginInputChange","regName","regEmail","regPassword","regPassword2","formRegister","handleRegisterInputChange","className","style","textAlign","onSubmit","e","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","parseEvents","events","map","event","end","moment","toDate","start","updateEvent","NavBar","useSelector","state","auth","onClick","clear","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","notes","minutes","seconds","add","Modal","setAppElement","CalendarModal","startDate","setStartDate","endDate","setEndDate","form","setForm","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","isSameOrAfter","id","console","log","getState","_id","minDate","autoComplete","required","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","authReducer","action","calendarReducer","filter","uiReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b7fd802.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\n\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET') => {\n    const url = `${ baseUrl }/${ endpoint }`\n    if( method === 'GET'){\n        return fetch( url )\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        })\n    }\n}\n\nexport const fetchWithToken = ( endpoint, data, method = 'GET') => {\n    const url = `${ baseUrl }/${ endpoint }`\n    const token = localStorage.getItem('token') || ''\n\n    if( method === 'GET'){\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        } )\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        })\n    }\n}","const types = {\n    uiOpenModal: '[ui] Open Modal',\n    uiCloseModal: '[ui] Close Modal',\n\n    eventSetActive: '[event] Set Active',\n    eventStartAddNew: '[event] Start Add New',\n    eventAddNew: '[event] Add New',\n    eventClearActive: '[event] Clear Active',\n    eventUpdate: '[event] Update',\n    eventDelete: '[event] Delete',\n    eventLoaded: '[event] Loaded',\n    eventLogOut: '[event] Log Out',\n    \n\n    authCheckingFinish: '[auth] Finish Checking Login State',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartRenewToken: '[auth] Start Renew Token',\n    authLogout: '[auth] Start Renew Token',\n}\n\nexport default types","import Swal from \"sweetalert2\";\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport types from \"../types/types\";\n\nexport const startLogin = ( email, password ) => {\n    return async dispatch => {\n        const response = await fetchWithoutToken( 'auth', { email, password }, 'POST' )\n        const body = await response.json()\n        \n        if( body.ok ){\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n    }\n}\n\nexport const login = user => ({\n    type: types.authLogin,\n    payload: user\n})\n\nexport const startRegister = ( email, password, name ) => {\n    return async dispatch => {\n\n        const response = await fetchWithoutToken( 'auth/new', { email, password, name }, 'POST' )\n        const body = await response.json()\n\n        if( body.ok ){\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async dispatch => {\n\n        const response = await fetchWithToken( 'auth/renew' )\n        const body = await response.json()\n\n        if( body.ok ){\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            dispatch( finishChecking() )\n        }\n    }\n}\n\nexport const finishChecking = () => ({\n    type: types.authCheckingFinish\n})\n\nexport const startLogout = () => {\n    return dispatch => {\n        localStorage.clear()\n        dispatch( logout() )\n    }\n}\n\nexport const logout = () => ({ type: types.authLogout })","import { useState } from 'react';\n\nconst useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n\nexport default useForm","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport useForm from '../../hooks/useForm';\n\nconst LoginScreen = () => {\n\n    const dispatch = useDispatch()\n\n    const [ formLogin, handleLoginInputChange ] = useForm({\n        logEmail: '',\n        logPassword: ''\n    })\n    const { logEmail, logPassword } = formLogin\n    \n    const [ formRegister, handleRegisterInputChange ] = useForm({\n        regName: '',\n        regEmail: '',\n        regPassword: '',\n        regPassword2: ''\n    })\n    const { regName, regEmail, regPassword, regPassword2 } = formRegister\n\n    const handleLogin = e => {\n        e.preventDefault()\n        dispatch(startLogin( logEmail, logPassword ))\n    }\n\n    const handleRegister = e => {\n        e.preventDefault()\n\n        if( regPassword !== regPassword2 ) {\n            return Swal.fire('Error', 'Passwords Should Match', 'error')\n        }\n\n        dispatch(startRegister( regEmail, regPassword, regName ))\n    }\n\n    return (\n\n        <div className=\"container login__container\">\n            <h1 style={{textAlign: 'center'}}>GRUPO 11 - Calendario Para ecommerce DH</h1>\n            <p style={{textAlign: 'center'}}>Alejo Bonadeo, Eduardo Di Fermo, Felipe Englebienne, Javier Menendez</p>\n            <div className=\"row\">\n                <div className=\"col-md-6 login__form-1\">\n                    <h3>Log In</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"logEmail\"\n                                value={ logEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                name=\"logPassword\"\n                                value={ logPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"login__btnSubmit\"\n                                value=\"Log In\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login__form-2\">\n                    <h3>Register</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Name\"\n                                name=\"regName\"\n                                value={ regName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"regEmail\"\n                                value={ regEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\" \n                                name=\"regPassword\"\n                                value={ regPassword }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repeat Password\" \n                                name=\"regPassword2\"\n                                value={ regPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"login__btnSubmit\" \n                                value=\"Create Account\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen","import moment from \"moment\";\n\nconst parseEvents = ( events = [] ) => {\n    return events.map(event => ({\n        ...event,\n        end: moment( event.end ).toDate(),\n        start: moment( event.start ).toDate()\n    }))\n}\n\nexport default parseEvents","import types from \"../types/types\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport parseEvents from \"../helpers/parseEvents\";\nimport Swal from \"sweetalert2\";\n\nexport const eventStartAddNew = event => {\n    return async ( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth\n\n        try {\n            const response = await fetchWithToken('events', event, 'POST')\n            const body = await response.json()\n            \n            if( body.ok ) {\n                event.id = body.event.id\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                dispatch( eventAddNew( event ))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const eventAddNew = event => ({\n    type: types.eventAddNew,\n    payload: event\n})\n\nexport const eventSetActive = event => ({\n    type: types.eventSetActive,\n    payload: event\n})\n\nexport const eventClearActive = () => ({\n    type: types.eventClearActive\n})\n\nexport const updateEvent = event => ({\n    type: types.eventUpdate,\n    payload: event\n})\n\nexport const deleteEvent = () => ({type: types.eventDelete})\n\nexport const eventStartLoading = () => {\n    return async dispatch => {\n        \n        try {\n            const response = await fetchWithToken('events')\n            const body = await response.json()\n            \n            const events = parseEvents(body.events)\n            dispatch(eventLoaded( events ))\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const eventLoaded = events => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventStartUpdate = ( event ) => {\n    return async dispatch => {\n        try {\n            const response = await fetchWithToken(`events/${ event.id }`, event, 'PUT')\n            const body = await response.json()\n            if( body.ok ){\n                dispatch( updateEvent( event ) )\n            } else{\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const eventStartDelete = ( ) => {\n    return async (dispatch, getState) => {\n        try {\n            const { activeEvent } = getState().calendar\n            const response = await fetchWithToken(`events/${ activeEvent.id }`, {}, 'DELETE')\n            const body = await response.json()\n            if( body.ok ){\n                dispatch( deleteEvent() )\n            } else{\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const eventLogOut = () => ({\n    type: types.eventLogOut\n})","import React from 'react'\nimport {FaSignOutAlt} from 'react-icons/fa'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { eventLogOut } from '../../actions/events'\n\nconst NavBar = () => {\n\n    const { name } = useSelector(state => state.auth)\n    const dispatch = useDispatch()\n    const handleLogOut = () => {\n        dispatch(startLogout())\n        dispatch(eventLogOut())\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button className=\"btn btn-outline-danger\" onClick={ handleLogOut }>\n                <FaSignOutAlt/>\n                <span> Log Out</span>\n            </button>\n        </div>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\n\nconst CalendarEvent = ({event}) => {\n\n    const {title, user} = event\n\n    return (\n        <div>\n            <h6>{title}</h6>\n            <strong>- {user.name}</strong>\n        </div>\n    )\n}\n\nexport default CalendarEvent\n","import types from \"../types/types\"\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})\n\nexport const uiOpenModal = () => ({\n        type: types.uiOpenModal\n    })\n    \n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker'\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)'\n    },\n};\n\nconst initialState = {\n    title: 'Event',\n    notes: '',\n    start: moment().minutes(0).seconds(0).add(1, 'hours').toDate(),\n    end: moment().minutes(0).seconds(0).add(2, 'hours').toDate()\n}\n\nModal.setAppElement('#root');\n\nconst CalendarModal = () => {\n\n    const [startDate, setStartDate] = useState(moment().minutes(0).seconds(0).add(1, 'hours').toDate())\n\n    const [endDate, setEndDate] = useState(moment().minutes(0).seconds(0).add(2, 'hours').toDate())\n\n    const [form, setForm] = useState({\n        title: 'Event',\n        notes: '',\n        start: moment().minutes(0).seconds(0).add(1, 'hours').toDate(),\n        end: moment().minutes(0).seconds(0).add(2, 'hours').toDate()\n    })\n    \n    const { title, notes, start, end } = form\n\n    \n    const dispatch = useDispatch()\n    \n    const {modalOpen} = useSelector(state => state.ui)\n    const {activeEvent} = useSelector(state => state.calendar)\n\n    useEffect(() => {\n        if( activeEvent ){\n            setForm(activeEvent)\n            setStartDate(activeEvent.start)\n            setEndDate(activeEvent.end)\n        }\n        else{\n            setForm(initialState)\n        }\n    }, [activeEvent])\n\n    const handleInputChange = ({target}) => {\n        setForm({\n            ...form,\n            [target.name]: target.value\n        })\n    }\n\n    const handleStartDateChange = e => {\n        setStartDate(e)\n        setForm({\n            ...form,\n            start: e\n        })\n    }\n    const handleEndDateChange = e => {\n        setEndDate(e)\n        setForm({\n            ...form,\n            end: e\n        })\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal())\n        dispatch(eventClearActive())\n        setForm(initialState)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        \n        if(moment(start).isSameOrAfter(moment(end))){\n            return Swal.fire('Error', 'Start date should be before end date!', 'error') \n        }\n\n        if(activeEvent){\n            dispatch(eventStartUpdate( form ))\n        }\n        else {\n            dispatch(eventStartAddNew( form ))\n        }\n        /* TODO: agregar a base */\n        closeModal()\n    }\n\n    return (\n        <Modal\n        isOpen={ modalOpen }\n        /* onAfterOpen={afterOpenModal} */\n        onRequestClose={closeModal}\n        style={customStyles}\n        className=\"modal\"\n        closeTimeoutMS={200}\n        overlayClassName=\"modal__fondo\"\n      >\n        <h1> {activeEvent ? 'Edit Event' : 'New Event'} </h1>\n        <hr />\n        <form className=\"container\" onSubmit={ handleSubmit }>\n\n            <div className=\"form-group\">\n                <label>Starts</label>\n                <DateTimePicker \n                onChange={ handleStartDateChange } \n                value={ startDate }\n                className=\"form-control\"\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label>Ends</label>\n                <DateTimePicker \n                onChange={ handleEndDateChange } \n                value={ endDate }\n                className=\"form-control\"\n                minDate={startDate}\n                />\n            </div>\n\n            <hr />\n            <div className=\"form-group\">\n                <label>Title and notes</label>\n                <input \n                    type=\"text\" \n                    className=\"form-control\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                    autoComplete=\"off\"\n                    required\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Brief Description</small>\n            </div>\n\n            <div className=\"form-group\">\n                <textarea \n                    type=\"text\" \n                    className=\"form-control\"\n                    placeholder=\"Notes\"\n                    rows=\"5\"\n                    name=\"notes\"\n                    value={ notes }\n                    onChange={ handleInputChange }\n                ></textarea>\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Additional Info</small>\n            </div>\n\n            <button\n                type=\"submit\"\n                className=\"btn btn-outline-primary btn-block\"\n            >\n                <i className=\"far fa-save\"></i>\n                <span> Guardar</span>\n            </button>\n\n        </form>\n      </Modal>\n    )\n}\n\nexport default CalendarModal\n","import React from 'react'\nimport { FaPlus } from 'react-icons/fa'\nimport { useDispatch } from 'react-redux'\nimport { eventClearActive } from '../../actions/events'\nimport { uiOpenModal } from '../../actions/ui'\n\nconst AddNewFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handleClick = () => {\n        dispatch(eventClearActive)\n        dispatch(uiOpenModal())\n    }\n\n    return (\n        <button className=\"btn btn-primary fab\" onClick={handleClick}>\n            <FaPlus/>\n        </button>\n    )\n}\n\nexport default AddNewFab\n","import React from 'react'\nimport {FaTrash} from 'react-icons/fa'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\nconst DeleteEventFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete())\n    }\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={ handleDelete }>\n            <FaTrash/>\n            <span> Delete</span>\n        </button>\n    )\n}\n\nexport default DeleteEventFab\n","import React, { useEffect, useState } from 'react'\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport NavBar from '../ui/NavBar'\nimport CalendarEvent from './CalendarEvent'\nimport CalendarModal from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events'\nimport AddNewFab from '../ui/AddNewFab'\nimport DeleteEventFab from '../ui/DeleteEventFab'\n\nconst localizer = momentLocalizer(moment)\n\nconst CalendarScreen = () => {\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\n\n    const dispatch = useDispatch()\n    const { events, activeEvent } = useSelector(state => state.calendar)\n\n    useEffect(() => {\n        dispatch( eventStartLoading() )\n    }, [dispatch])\n\n    const onDoubleClick = e => {\n        dispatch(uiOpenModal())\n    }\n\n    const onSelect = e => {\n        dispatch(eventSetActive(e))\n    }\n\n    const onSelectSlot = e => {\n        dispatch(eventClearActive())\n    }\n\n    const onViewChange = e => {\n        setLastView(e)\n        localStorage.setItem('lastView', e)\n    }\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        const style = {\n            backgroundColor: '#367CF7',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n        return {style}\n    }\n\n    return (\n        <div className=\"calendar__screen\">\n            <NavBar/>\n\n            <Calendar\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            eventPropGetter={ eventStyleGetter}\n            onDoubleClickEvent={ onDoubleClick}\n            onSelectEvent={ onSelect }\n            onSelectSlot={ onSelectSlot }\n            selectable={ true }\n            onView={ onViewChange }\n            view={lastView}\n            components={{\n                event: CalendarEvent\n            }}\n            />\n            <CalendarModal/>\n            {\n                activeEvent && <DeleteEventFab/>\n            }\n            \n            <AddNewFab/>\n        </div>\n    )\n}\n\nexport default CalendarScreen\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({isAuthenticated, component: Component, ...rest}) => {\n    return (\n        <Route {...rest}\n        component={props => (\n            isAuthenticated ? <Component {...props}/> : <Redirect to=\"/login\"/>\n        )}\n        />\n    )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PublicRoute = ({isAuthenticated, component: Component, ...rest}) => {\n    return (\n        <Route {...rest}\n        component={props => (\n            !isAuthenticated ? <Component {...props}/> : <Redirect to=\"/\"/>\n        )}\n        />\n    )\n}\n\nexport default PublicRoute\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport { startChecking } from '../actions/auth'\nimport LoginScreen from '../components/auth/LoginScreen'\nimport CalendarScreen from '../components/calendar/CalendarScreen'\nimport PrivateRoute from './PrivateRoute'\nimport PublicRoute from './PublicRoute'\n\nconst AppRouter = () => {\n\n    const dispatch = useDispatch()\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch( startChecking() )\n    }, [dispatch])\n\n    if( checking ) {\n        return <h1>Please Wait...</h1>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid}/>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid}/>\n                    <Redirect to=\"/\"/>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","import types from \"../types/types\"\n\nconst initialState = {\n    checking: true,\n}\n\nconst authReducer = ( state = initialState, action ) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false,\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","import types from \"../types/types\";\n/* {\n        id: new Date().getTime(),\n        title: 'Halloween',\n        start: moment().add(19, 'days').toDate(),\n        end: moment().add(19, 'days').toDate(),\n        notes: 'W',\n        user: {\n            _id: '123',\n            name: 'Sergio'\n        }\n    } */\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\n\nconst calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return{\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew: \n            return {\n                ...state,\n                events: [...state.events, action.payload]\n            }\n        case types.eventClearActive: \n            return {\n                ...state,\n                activeEvent: null\n            }\n        case types.eventUpdate: \n            return {\n                ...state,\n                events: state.events.map( event => event.id === action.payload.id ? action.payload : event)\n            }\n        case types.eventDelete: \n            return {\n                ...state,\n                events: state.events.filter( event => event.id !== state.activeEvent.id),\n                activeEvent: null\n            }\n        case types.eventLoaded: \n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n        case types.eventLogOut: \n            return initialState\n        default:\n            return state\n    }\n}\n\nexport default calendarReducer\n","import types from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false\n}\n\nconst uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state\n    }\n}\n\nexport default uiReducer","import { combineReducers } from \"redux\"\nimport authReducer from \"./authReducer\"\nimport calendarReducer from \"./calendarReducer\"\nimport uiReducer from \"./uiReducer\"\n\nconst rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\nexport default rootReducer","import { applyMiddleware, compose, createStore } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"../reducers/rootReducer\"\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react'\nimport { Provider } from 'react-redux'\nimport AppRouter from './routers/AppRouter'\nimport store from './store/store'\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './sass/styles.scss'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}